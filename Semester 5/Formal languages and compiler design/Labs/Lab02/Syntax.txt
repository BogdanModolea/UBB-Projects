# Syntax.in

program ::= decllist ";"

decllist ::= declaration | declaration ";" decllist

declaration ::= "letInt" | "letString" | "letBool" | "letDouble" identifierlist

identifierlist ::= IDENTIFIER ["=" expression]

type ::= "Int" | "String" | "Bool" | "Double"

stmtlist ::= stmt | stmt ";" stmtlist

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt | iostmt

assignstmt ::= IDENTIFIER "=" expression

expression ::= expression "+" term | term

term ::= term "*" factor | factor

factor ::= "(" expression ")" | IDENTIFIER

iostmt ::= "read" | "print" "(" IDENTIFIER ")"

structstmt ::= cmpdstmt | ifstmt

ifstmt ::= "if" "(" condition ")" "{" {stmt} "}" ["else" "{" {stmt} "}"]

forstmt ::= "for" "(" assignstmt ";" condition ";" expression ")" "{" {stmt} "}"

condition ::= expression RELATION expression

RELATION ::= "<" | "<=" | "=" | "<>" | ">=" | ">"
