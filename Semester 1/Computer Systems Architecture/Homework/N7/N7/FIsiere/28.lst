     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  extern scanf               ; tell nasm that exit exists even if we won't be defining it
     7                                  extern printf              ; tell nasm that exit exists even if we won't be defining it
     8                                  extern fscanf               ; tell nasm that exit exists even if we won't be defining it
     9                                  extern fopen               ; tell nasm that exit exists even if we won't be defining it
    10                                  extern fread               ; tell nasm that exit exists even if we won't be defining it
    11                                  extern fprintf               ; tell nasm that exit exists even if we won't be defining it
    12                                  extern fclose               ; tell nasm that exit exists even if we won't be defining it
    13                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    14                                  extern strlen
    15                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    16                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    17                                  import fscanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    18                                  import fopen msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    19                                  import fread msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    20                                  import fprintf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    21                                  import fclose msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    22                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    23                                  import strlen msvcrt.dll
    24                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    25                                  
    26                                  
    27                                  ; our data is declared here (the variables needed by our program)
    28                                  segment data use32 class=data
    29                                      ; ...
    30                                  
    31 00000000 <res 00000014>              a times 20 resb 1
    32                                      ;lena equ $ - a
    33 00000014 257300                      read_format db "%s", 0
    34 00000017 25730D00                    print_format db "%s", 13, 0
    35 0000001B 69646B2E74787400            file db "idk.txt", 0
    36 00000023 7700                        mode db "w", 0
    37 00000025 <res 00000004>              fd resd 1
    38 00000029 00                          apare db 0
    39                                      
    40                                  ; our code starts here
    41                                  segment code use32 class=code
    42                                      start:
    43 00000000 68[23000000]                    push dword mode
    44 00000005 68[1B000000]                    push dword file
    45 0000000A FF15[00000000]                  call [fopen]
    46 00000010 A3[25000000]                    mov [fd], eax
    47 00000015 83C408                          add esp, 4 * 2
    48                                          
    49                                          repeta:
    50 00000018 68[00000000]                        push dword a
    51 0000001D 68[14000000]                        push dword read_format    
    52 00000022 FF15[00000000]                      call [scanf]
    53 00000028 83C408                              add esp, 4 * 2
    54                                              
    55 0000002B C605[29000000]00                    mov byte[apare], 0
    56 00000032 BE00000000                          mov esi, 0
    57 00000037 68[00000000]                        push a
    58 0000003C FF15[00000000]                      call [strlen]
    59 00000042 83C404                              add esp, 4*1
    60                                              
    61 00000045 89C1                                mov ecx, eax
    62                                              
    63                                              cauta:
    64 00000047 8A86[00000000]                          mov al, [a + esi]
    65 0000004D 3C61                                    cmp al, 61h
    66 0000004F 720A                                    jb nusalvezmomentan
    67                                                  
    68 00000051 3C7A                                    cmp al, 7Ah
    69 00000053 7706                                    ja nusalvezmomentan
    70                                                  
    71 00000055 FE05[29000000]                          inc byte[apare]
    72                                                  
    73                                                  nusalvezmomentan:
    74 0000005B 46                                          inc esi
    75                                                      
    76 0000005C 803D[29000000]01                        cmp byte[apare], 1
    77 00000063 E0E2                                loopne cauta
    78                                              
    79                                              
    80 00000065 803D[29000000]01                    cmp byte[apare], 1
    81                                              
    82 0000006C 7519                                jnz final
    83 0000006E 68[00000000]                            push dword a
    84 00000073 68[17000000]                            push dword print_format
    85 00000078 FF35[25000000]                          push dword [fd]
    86 0000007E FF15[00000000]                          call [fprintf]
    87 00000084 83C408                                  add esp, 4 * 2
    88                                              
    89                                              final
    89          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    90 00000087 803D[00000000]24                    cmp byte[a], 24h
    91 0000008E 7588                            jne repeta
    92                                          
    93 00000090 FF35[25000000]                  push dword [fd]
    94 00000096 FF15[00000000]                  call [fclose]
    95 0000009C 83C404                          add esp, 4
    96                                          
    97                                          
    98                                          ; exit(0)
    99 0000009F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   100 000000A1 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
