     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; (d-a)+(b+b+c)
    14                                      
    15 00000000 0300                        a dw 3
    16 00000002 0200                        b dw 2
    17 00000004 0400                        c dw 4
    18 00000006 0700                        d dw 7
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 66A1[06000000]                  mov ax, [d]
    25 00000006 662B05[00000000]                sub ax, [a]
    26 0000000D 668B1D[02000000]                mov bx, [b]
    27 00000014 66031D[02000000]                add bx, [b]
    28 0000001B 66031D[04000000]                add bx, [c]
    29 00000022 6601D8                          add ax, bx
    30                                          ; exit(0)
    31 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
