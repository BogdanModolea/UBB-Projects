     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      
    14                                      ;db 'A string.'
    15                                      ;db 'A', '2', 'n', 'd', 's', 't', 'g'
    16                                      ;a db 34, 0fh, 1010101b, 234, 23h, 123
    17                                      
    18                                      
    19                                      ;a db '1', '2', '3', '4', '5'
    20                                      ;b dw '1', '2', '3', '4', '5'
    21                                      ;c dd '1', '2', '3', '4', '5'
    22 00000000 310000000000000032-         d dq '1', '2', '3', '4', '5'
    22 00000009 000000000000003300-
    22 00000012 000000000000340000-
    22 0000001B 000000000035000000-
    22 00000024 00000000           
    23                                      
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28                                          ;mov al, [a+4]
    29                                          
    30                                          ;mov ax, [b + 5]
    31                                          
    32                                          ; exit(0)
    33 00000000 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000002 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
